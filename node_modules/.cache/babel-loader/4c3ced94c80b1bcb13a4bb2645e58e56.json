{"ast":null,"code":"export default ((state, action) => {\n  console.log('test_redux-reducer_schedule', state, action);\n\n  switch (action.type) {\n    case 'INIT_SCHEDULE':\n      return {\n        shedule: [],\n        textError: '',\n        loadingFlag: false\n      };\n\n    case 'LOAD_SCHEDULE':\n      return {\n        shedule: [],\n        textError: '',\n        loadingFlag: true\n      };\n\n    case 'LOAD_SCHEDULE_FAILURE':\n      return {\n        shedule: [],\n        textError: '',\n        loadingFlag: false\n      };\n\n    case 'LOAD_SCHEDULE_SUCCESS':\n      return {\n        shedule: action.payload,\n        textError: '',\n        loadingFlag: false\n      };\n\n    default:\n      return {\n        shedule: [],\n        textError: '',\n        loadingFlag: false\n      };\n  }\n});","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/redux/schedule/reducer.js"],"names":["state","action","console","log","type","shedule","textError","loadingFlag","payload"],"mappings":"AAAA,gBAAe,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,KAA3C,EAAkDC,MAAlD;;AACD,UAAQA,MAAM,CAACG,IAAf;AACC,SAAK,eAAL;AACI,aAAO;AAACC,QAAAA,OAAO,EAAE,EAAV;AAAcC,QAAAA,SAAS,EAAE,EAAzB;AAA6BC,QAAAA,WAAW,EAAE;AAA1C,OAAP;;AAEJ,SAAK,eAAL;AACC,aAAO;AAACF,QAAAA,OAAO,EAAE,EAAV;AAAcC,QAAAA,SAAS,EAAE,EAAzB;AAA6BC,QAAAA,WAAW,EAAE;AAA1C,OAAP;;AAED,SAAK,uBAAL;AACC,aAAO;AAACF,QAAAA,OAAO,EAAE,EAAV;AAAcC,QAAAA,SAAS,EAAE,EAAzB;AAA6BC,QAAAA,WAAW,EAAE;AAA1C,OAAP;;AAED,SAAK,uBAAL;AACI,aAAO;AAACF,QAAAA,OAAO,EAAEJ,MAAM,CAACO,OAAjB;AAA0BF,QAAAA,SAAS,EAAE,EAArC;AAAyCC,QAAAA,WAAW,EAAE;AAAtD,OAAP;;AAEJ;AACI,aAAO;AAACF,QAAAA,OAAO,EAAE,EAAV;AAAcC,QAAAA,SAAS,EAAE,EAAzB;AAA6BC,QAAAA,WAAW,EAAE;AAA1C,OAAP;AAdL;AAgBA,CAlBD","sourcesContent":["export default (state, action) => {\n  console.log('test_redux-reducer_schedule', state, action)\n\tswitch (action.type) {\n\t\tcase 'INIT_SCHEDULE':\n      return {shedule: [], textError: '', loadingFlag: false};\n\n\t\tcase 'LOAD_SCHEDULE':\n\t\t\treturn {shedule: [], textError: '', loadingFlag: true};\n\n\t\tcase 'LOAD_SCHEDULE_FAILURE':\n\t\t\treturn {shedule: [], textError: '', loadingFlag: false};\n\n\t\tcase 'LOAD_SCHEDULE_SUCCESS':\n      return {shedule: action.payload, textError: '', loadingFlag: false};\n\n\t\tdefault:\n      return {shedule: [], textError: '', loadingFlag: false};\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}