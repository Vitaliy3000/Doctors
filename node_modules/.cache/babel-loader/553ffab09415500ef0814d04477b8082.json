{"ast":null,"code":"import _slicedToArray from \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport function formatBirthDate(date) {\n  const _date$split = date.split('/'),\n        _date$split2 = _slicedToArray(_date$split, 3),\n        day = _date$split2[0],\n        month = _date$split2[1],\n        year = _date$split2[2];\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n}\nexport function days2weeks(days) {\n  const weeks = [];\n\n  for (let i = 0; i < days.length / 7; i++) {\n    weeks[i] = [];\n\n    for (let j = 0; j < 7; j++) {\n      weeks[i].push(days[i * 7 + j]);\n    }\n  }\n\n  return weeks;\n}\nexport function info2time(info) {\n  const array = info.split(', ').flatMap(period => period.split('-'));\n  const min = array.reduce((min, elem) => parseInt(min.replace(':', '')) > parseInt(elem.replace(':', '')) ? elem : min, '23:59');\n  const max = array.reduce((min, elem) => parseInt(min.replace(':', '')) < parseInt(elem.replace(':', '')) ? elem : min, '00:00');\n  return [min, max];\n}","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/utils/datetime.js"],"names":["formatBirthDate","date","split","day","month","year","days2weeks","days","weeks","i","length","j","push","info2time","info","array","flatMap","period","min","reduce","elem","parseInt","replace","max"],"mappings":";AAAA,OAAO,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAAA,sBACVA,IAAI,CAACC,KAAL,CAAW,GAAX,CADU;AAAA;AAAA,QAC9BC,GAD8B;AAAA,QACzBC,KADyB;AAAA,QAClBC,IADkB;;AAErC,mBAAUA,IAAV,cAAkBD,KAAlB,cAA2BD,GAA3B;AACA;AAED,OAAO,SAASG,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,QAAMC,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAL,GAAc,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;AACxCD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAW,EAAX;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BH,MAAAA,KAAK,CAACC,CAAD,CAAL,CAASG,IAAT,CAAcL,IAAI,CAACE,CAAC,GAAC,CAAF,GAAIE,CAAL,CAAlB;AACD;AACF;;AAED,SAAOH,KAAP;AACD;AAGD,OAAO,SAASK,SAAT,CAAmBC,IAAnB,EAAyB;AAC/B,QAAMC,KAAK,GAAGD,IAAI,CAACZ,KAAL,CAAW,IAAX,EAAiBc,OAAjB,CAAyBC,MAAM,IAAIA,MAAM,CAACf,KAAP,CAAa,GAAb,CAAnC,CAAd;AACA,QAAMgB,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa,CAACD,GAAD,EAAME,IAAN,KAAgBC,QAAQ,CAACH,GAAG,CAACI,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAD,CAAR,GAAiCD,QAAQ,CAACD,IAAI,CAACE,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAD,CAAzC,GAAmEF,IAAnE,GAA0EF,GAAvG,EAA6G,OAA7G,CAAZ;AACA,QAAMK,GAAG,GAAGR,KAAK,CAACI,MAAN,CAAa,CAACD,GAAD,EAAME,IAAN,KAAgBC,QAAQ,CAACH,GAAG,CAACI,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAD,CAAR,GAAiCD,QAAQ,CAACD,IAAI,CAACE,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAD,CAAzC,GAAmEF,IAAnE,GAA0EF,GAAvG,EAA6G,OAA7G,CAAZ;AACA,SAAO,CAACA,GAAD,EAAMK,GAAN,CAAP;AACA","sourcesContent":["export function formatBirthDate(date) {\n\tconst [day, month, year] = date.split('/');\n\treturn `${year}-${month}-${day}`\n}\n\nexport function days2weeks(days) {\n  const weeks = [];\n\n  for (let i = 0; i < days.length / 7; i++) {\n    weeks[i] = []\n    for (let j = 0; j <  7; j++) {\n      weeks[i].push(days[i*7+j])\n    }\n  }\n\n  return weeks\n}\n\n\nexport function info2time(info) {\n\tconst array = info.split(', ').flatMap(period => period.split('-'))\n\tconst min = array.reduce((min, elem) => (parseInt(min.replace(':', '')) > parseInt(elem.replace(':', '')) ? elem : min), '23:59')\n\tconst max = array.reduce((min, elem) => (parseInt(min.replace(':', '')) < parseInt(elem.replace(':', '')) ? elem : min), '00:00')\n\treturn [min, max];\n}"]},"metadata":{},"sourceType":"module"}