{"ast":null,"code":"var _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/components/ScheduleTable/ScheduleTable.js\";\nimport React, { Component, Fragment } from 'react';\nimport ScheduleCell from '../ScheduleCell/ScheduleCell';\nimport Button from '../Button/Button';\nimport styles from './ScheduleTable.module.css';\nconst BASE_URL = \"https://back-q-doctor.herokuapp.com/api\";\nconst APPOINTMENT_URL = \"/people/appointments\";\n\nfunction days2weeks(days) {\n  const weeks = [];\n\n  for (let i = 0; i < days.length / 7; i++) {\n    weeks[i] = [];\n\n    for (let j = 0; j < 7; j++) {\n      weeks[i].push(days[i * 7 + j]);\n    }\n  }\n\n  return weeks;\n}\n\nexport default class ScheduleTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  fetchCreateAppointment(appointments) {\n    Promise.all(appointments.map(appointment => fetch(BASE_URL + APPOINTMENT_URL, {\n      method: 'POST',\n      body: JSON.stringify(appointment),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })));\n  }\n\n  handleClick(element, active) {\n    this.setState(Object.assign(this.state, {\n      [element.date]: active\n    }));\n  }\n\n  handleSubmit() {\n    console.log(this.state);\n    const appointments = [];\n\n    for (let key of Object.keys(this.state).filter(key => this.state[key])) {\n      const start = new Date(Date.parse(key));\n      const end = new Date(new Date(start).setDate(start.getDate() + 1));\n      appointments.push({\n        \"appointment\": {\n          \"available_resource_id\": String(this.props.availableResourceId),\n          \"complex_resource_id\": String(this.props.complexResourceId),\n          \"start_time\": start.toISOString().split('.')[0],\n          \"finish_time\": end.toISOString().split('.')[0],\n          \"lpu_id\": String(this.props.lpuId),\n          \"priority\": 0,\n          \"reception_type_code_or_ldp_type_code\": this.props.code\n        },\n        \"person\": {\n          \"birth_date\": localStorage.getItem('birthDate'),\n          \"oms_number\": localStorage.getItem('omsNumber')\n        }\n      });\n    }\n\n    console.log('test');\n    this.setState({\n      new: 1\n    });\n    this.fetchCreateAppointment(appointments);\n    console.log(this.state);\n  }\n\n  render() {\n    const table = [];\n    const weeks = days2weeks(this.props.schedule);\n\n    for (const week of weeks) {\n      let row = [];\n\n      for (const day of week) {\n        row.push(React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(ScheduleCell, {\n          handleClick: this.handleClick,\n          cell: day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })));\n      }\n\n      table.push(React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, row));\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.schedule,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: styles.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u043D\\u0435\\u0434\\u0435\\u043B\\u044C\\u043D\\u0438\\u043A\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\u0412\\u0442\\u043E\\u0440\\u043D\\u0438\\u043A\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\u0421\\u0440\\u0435\\u0434\\u0430\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\u0427\\u0435\\u0442\\u0432\\u0435\\u0440\\u0433\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\u041F\\u044F\\u0442\\u043D\\u0438\\u0446\\u0430\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\u0421\\u0443\\u0431\\u0431\\u043E\\u0442\\u0430\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\u0412\\u043E\\u0441\\u043A\\u0440\\u0435\\u0441\\u0435\\u043D\\u044C\\u0435\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, table)), React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, 'Встать в очередь'));\n  }\n\n}","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/components/ScheduleTable/ScheduleTable.js"],"names":["React","Component","Fragment","ScheduleCell","Button","styles","BASE_URL","APPOINTMENT_URL","days2weeks","days","weeks","i","length","j","push","ScheduleTable","constructor","props","state","handleClick","bind","handleSubmit","fetchCreateAppointment","appointments","Promise","all","map","appointment","fetch","method","body","JSON","stringify","headers","element","active","setState","Object","assign","date","console","log","key","keys","filter","start","Date","parse","end","setDate","getDate","String","availableResourceId","complexResourceId","toISOString","split","lpuId","code","localStorage","getItem","new","render","table","schedule","week","row","day"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport ScheduleCell from '../ScheduleCell/ScheduleCell';\nimport Button from '../Button/Button';\n\nimport styles from './ScheduleTable.module.css';\n\n\nconst BASE_URL = \"https://back-q-doctor.herokuapp.com/api\"\nconst APPOINTMENT_URL = \"/people/appointments\"\n\n\nfunction days2weeks(days) {\n  const weeks = [];\n\n  for (let i = 0; i < days.length / 7; i++) {\n    weeks[i] = []\n    for (let j = 0; j <  7; j++) {\n      weeks[i].push(days[i*7+j])\n    }\n  }\n\n  return weeks\n}\n\n\nexport default class ScheduleTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  fetchCreateAppointment(appointments) {\n    Promise.all(appointments.map(appointment =>\n      fetch(BASE_URL+APPOINTMENT_URL,\n        {\n          method: 'POST',\n          body: JSON.stringify(appointment),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n        }\n      )\n    ));\n  }\n\n  handleClick(element, active) {\n    this.setState(Object.assign(this.state, {[element.date]: active}))\n  };\n\n  handleSubmit() {\n    console.log(this.state)\n    const appointments = [];\n    for (let key of Object.keys(this.state).filter(key => this.state[key])) {\n      const start = new Date(Date.parse(key));\n      const end = new Date(new Date(start).setDate(start.getDate()+1))\n      appointments.push({\n        \"appointment\": {\n          \"available_resource_id\": String(this.props.availableResourceId),\n          \"complex_resource_id\": String(this.props.complexResourceId),\n          \"start_time\": start.toISOString().split('.')[0],\n          \"finish_time\": end.toISOString().split('.')[0],\n          \"lpu_id\": String(this.props.lpuId),\n          \"priority\": 0,\n          \"reception_type_code_or_ldp_type_code\": this.props.code,\n        },\n        \"person\": {\n          \"birth_date\": localStorage.getItem('birthDate'),\n          \"oms_number\": localStorage.getItem('omsNumber'),\n        }\n      })\n    }\n    console.log('test')\n    this.setState({new: 1})\n    this.fetchCreateAppointment(appointments)    \n    console.log(this.state)\n  }\n\n  render() {\n    const table = [];\n    const weeks = days2weeks(this.props.schedule);\n\n    for (const week of weeks){\n      let row = [];\n      for (const day of week) {\n        row.push(<td><ScheduleCell handleClick={this.handleClick} cell={day}/></td>)\n      }\n      table.push(<tr>{row}</tr>)\n    }\n\n    return (\n      <div className={styles.schedule}>\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Понедельник</th>\n              <th>Вторник</th>\n              <th>Среда</th>\n              <th>Четверг</th>\n              <th>Пятница</th>\n              <th>Суббота</th>\n              <th>Воскресенье</th>\n            </tr>\n          </thead>\n        <tbody>\n          {table}\n        </tbody>\n      </table>\n      <Button type='submit' onClick={this.handleSubmit}>{'Встать в очередь'}</Button>\n    </div>\n    )\n  };\n}"]},"metadata":{},"sourceType":"module"}