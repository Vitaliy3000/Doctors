{"ast":null,"code":"const PROXY_URL = \"https://proxy-q-doctor.herokuapp.com/api/emias/\";\nconst SCHEDULE_URL = \"schedule\"; // fetchSchedule() {\n//   return \n//           // .then(response => {\n//           //         localStorage.setItem('schedule', JSON.stringify(response));\n//           //         localStorage.setItem('authFlag', Boolean(Object.entries(response).length));\n//           // })\n//           // .catch(err => this.setState({err}))\n//           // .finally(_ => this.setState({loadingFlag: false}))\n// };\n\nfunction getSchedule(omsNumber, birthDate) {\n  return fetch(PROXY_URL + SCHEDULE_URL + \"?oms_number=\".concat(omsNumber, \"&birth_date=\").concat(birthDate), {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\n;\nexport const loadSchedule = payload => {\n  console.log('test_redux-action-schedule', payload);\n  return function (dispatch) {\n    dispatch(loadScheduleAction);\n    console.log('test_redux', payload);\n    return getSchedule('1', '2').then(response => {\n      if (response.status !== 200) {\n        throw 'Ошибка авторизации';\n      }\n\n      return response;\n    }).then(response => response.json()); // getOperations(payload).then(\n    // \tx => dispatch(loadOperationsSuccess(x)),\n    // \terr => dispatch(loadOperationsFailureAction())\n    // );\n  };\n};\nexport const loadScheduleAction = {\n  type: 'LOAD_SCHEDULE',\n  payload: null\n};\nexport const loadScheduleFailureAction = {\n  type: 'LOAD_SCHEDULE_FAILURE',\n  payload: null\n};\nexport const loadScheduleSuccess = payload => ({\n  type: 'LOAD_SCHEDULE_SUCCESS',\n  payload: payload\n});","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/redux/schedule/actions.js"],"names":["PROXY_URL","SCHEDULE_URL","getSchedule","omsNumber","birthDate","fetch","method","headers","loadSchedule","payload","console","log","dispatch","loadScheduleAction","then","response","status","json","type","loadScheduleFailureAction","loadScheduleSuccess"],"mappings":"AAAA,MAAMA,SAAS,GAAG,iDAAlB;AACA,MAAMC,YAAY,GAAG,UAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,SAAhC,EAA2C;AACzC,SAAOC,KAAK,CACVL,SAAS,GAACC,YAAV,yBAAsCE,SAAtC,yBAA8DC,SAA9D,CADU,EAEV;AACEE,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAFX,GAFU,CAAZ;AAOD;;AAAA;AAGD,OAAO,MAAMC,YAAY,GAAGC,OAAO,IAAI;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,OAA1C;AACD,SAAO,UAASG,QAAT,EAAmB;AACvBA,IAAAA,QAAQ,CAACC,kBAAD,CAAR;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,OAA1B;AACA,WAAOP,WAAW,CAAC,GAAD,EAAM,GAAN,CAAX,CACEY,IADF,CACOC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAM,oBAAN;AACD;;AACD,aAAOD,QAAP;AACD,KANF,EAOED,IAPF,CAOOC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EAPnB,CAAP,CALuB,CAevB;AACF;AACA;AACA;AACA,GAnBD;AAoBA,CAtBM;AAwBP,OAAO,MAAMJ,kBAAkB,GAAG;AACjCK,EAAAA,IAAI,EAAE,eAD2B;AAEjCT,EAAAA,OAAO,EAAE;AAFwB,CAA3B;AAKP,OAAO,MAAMU,yBAAyB,GAAG;AACxCD,EAAAA,IAAI,EAAE,uBADkC;AAExCT,EAAAA,OAAO,EAAE;AAF+B,CAAlC;AAKP,OAAO,MAAMW,mBAAmB,GAAGX,OAAO,KAAK;AAC9CS,EAAAA,IAAI,EAAE,uBADwC;AAE9CT,EAAAA,OAAO,EAAEA;AAFqC,CAAL,CAAnC","sourcesContent":["const PROXY_URL = \"https://proxy-q-doctor.herokuapp.com/api/emias/\"\nconst SCHEDULE_URL = \"schedule\"\n\n// fetchSchedule() {\n//   return \n//           // .then(response => {\n//           //         localStorage.setItem('schedule', JSON.stringify(response));\n//           //         localStorage.setItem('authFlag', Boolean(Object.entries(response).length));\n//           // })\n//           // .catch(err => this.setState({err}))\n//           // .finally(_ => this.setState({loadingFlag: false}))\n// };\n\nfunction getSchedule(omsNumber, birthDate) {\n  return fetch(\n    PROXY_URL+SCHEDULE_URL+`?oms_number=${omsNumber}&birth_date=${birthDate}`,\n    {\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'},\n    },\n  );\n};\n\n\nexport const loadSchedule = payload => {\n  console.log('test_redux-action-schedule', payload)\n\treturn function(dispatch) {\n    dispatch(loadScheduleAction);\n    \n\n    console.log('test_redux', payload)\n    return getSchedule('1', '2')\n            .then(response => {\n              if (response.status !== 200) {\n                throw 'Ошибка авторизации';\n              }\n              return response\n            })\n            .then(response => response.json())\n    \n    \n    // getOperations(payload).then(\n\t\t// \tx => dispatch(loadOperationsSuccess(x)),\n\t\t// \terr => dispatch(loadOperationsFailureAction())\n\t\t// );\n\t};\n};\n\nexport const loadScheduleAction = {\n\ttype: 'LOAD_SCHEDULE',\n\tpayload: null,\n};\n\nexport const loadScheduleFailureAction = {\n\ttype: 'LOAD_SCHEDULE_FAILURE',\n\tpayload: null,\n};\n\nexport const loadScheduleSuccess = payload => ({\n\ttype: 'LOAD_SCHEDULE_SUCCESS',\n\tpayload: payload,\n});"]},"metadata":{},"sourceType":"module"}