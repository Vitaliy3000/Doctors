{"ast":null,"code":"import _slicedToArray from \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/components/ScheduleCell/ScheduleCell.js\";\nimport React from 'react';\nimport TimeRangeSlider from 'react-time-range-slider';\nimport styles from './ScheduleCell.module.css';\n\nconst info2time = info => {\n  const array = info.split(', ').flatMap(period => period.split('-'));\n  const min = array.reduce((min, elem) => parseInt(min.replace(':', '')) > parseInt(elem.replace(':', '')) ? elem : min, '23:59');\n  const max = array.reduce((min, elem) => parseInt(min.replace(':', '')) < parseInt(elem.replace(':', '')) ? elem : min, '00:00');\n  console.log(min, max);\n  return [min, max];\n};\n\nexport default class ScheduleCell extends React.Component {\n  // \tconstructor(props) {\n  // \t\tsuper(props);\n  // \t\tthis.featureRef = React.createRef();\n  // \t\tthis.changeStartHandler = this.changeStartHandler.bind(this);\n  // \t\tthis.timeChangeHandler = this.timeChangeHandler.bind(this);\n  // \t\tthis.changeCompleteHandler = this.changeCompleteHandler.bind(this);\n  // }\n  constructor(props) {\n    super(props);\n    this.featureRef = React.createRef();\n    this.changeStartHandler = this.changeStartHandler.bind(this);\n    this.timeChangeHandler = this.timeChangeHandler.bind(this);\n    this.changeCompleteHandler = this.changeCompleteHandler.bind(this);\n    this.state = {\n      active: this.props.active,\n      value: {\n        start: \"00:00\",\n        end: \"23:59\"\n      }\n    };\n  }\n\n  changeStyle() {\n    this.setState({\n      active: !this.state.active\n    });\n  }\n\n  timeChangeHandler(time) {\n    this.setState({\n      value: time\n    });\n  }\n\n  changeStartHandler(time) {\n    console.log(\"Start Handler Called\", time);\n  }\n\n  changeCompleteHandler(time) {\n    console.log(\"Complete Handler Called\", time);\n  }\n\n  render() {\n    if (this.props.cell) {\n      if (['Отпуск', 'Заболел'].includes(this.props.cell['receptionInfo'])) {\n        return React.createElement(\"div\", {\n          className: styles.colEmpty,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: styles.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, this.props.cell['date']), React.createElement(\"div\", {\n          className: styles.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.props.cell['receptionInfo']));\n      } else if (this.props.cell['receptionInfo']) {\n        const _info2time = info2time(this.props.cell['receptionInfo']),\n              _info2time2 = _slicedToArray(_info2time, 2),\n              start = _info2time2[0],\n              end = _info2time2[1];\n\n        return React.createElement(\"div\", {\n          className: this.state.active ? styles.colAcive : styles.col,\n          onClick: () => {\n            this.props.handleClick(this.props.cell);\n            this.changeStyle();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: styles.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, this.props.cell['date']), React.createElement(\"div\", {\n          className: styles.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(TimeRangeSlider, {\n          disabled: false,\n          format: 24,\n          maxValue: end,\n          minValue: start,\n          name: \"time_range\" // onChangeStart={this.changeStartHandler}\n          // onChangeComplete={this.changeCompleteHandler}\n          ,\n          onChange: this.timeChangeHandler,\n          step: 15,\n          value: this.state.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(\"div\", {\n          className: styles.colNotAllowed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: styles.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, this.props.cell['date']));\n      }\n    } else {\n      return React.createElement(\"div\", {\n        className: styles.colEmpty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/components/ScheduleCell/ScheduleCell.js"],"names":["React","TimeRangeSlider","styles","info2time","info","array","split","flatMap","period","min","reduce","elem","parseInt","replace","max","console","log","ScheduleCell","Component","constructor","props","featureRef","createRef","changeStartHandler","bind","timeChangeHandler","changeCompleteHandler","state","active","value","start","end","changeStyle","setState","time","render","cell","includes","colEmpty","date","colAcive","col","handleClick","colNotAllowed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TimeRangeSlider from 'react-time-range-slider';\n\nimport styles from './ScheduleCell.module.css';\n\nconst info2time = (info) => {\n\tconst array = info.split(', ').flatMap(period => period.split('-'))\n\tconst min = array.reduce((min, elem) => (parseInt(min.replace(':', '')) > parseInt(elem.replace(':', '')) ? elem : min), '23:59')\n\tconst max = array.reduce((min, elem) => (parseInt(min.replace(':', '')) < parseInt(elem.replace(':', '')) ? elem : min), '00:00')\n\tconsole.log(min, max)\n\treturn [min, max];\n}\n\nexport default class ScheduleCell extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.featureRef = React.createRef();\n// \t\tthis.changeStartHandler = this.changeStartHandler.bind(this);\n// \t\tthis.timeChangeHandler = this.timeChangeHandler.bind(this);\n// \t\tthis.changeCompleteHandler = this.changeCompleteHandler.bind(this);\n// }\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.featureRef = React.createRef();\n\t\tthis.changeStartHandler = this.changeStartHandler.bind(this);\n\t\tthis.timeChangeHandler = this.timeChangeHandler.bind(this);\n\t\tthis.changeCompleteHandler = this.changeCompleteHandler.bind(this);\n\t\tthis.state = {\n\t\t\tactive: this.props.active, \n\t\t\tvalue: {start: \"00:00\", end: \"23:59\"}\n\t\t};\n\t}\n\n\tchangeStyle() {\n\t\tthis.setState({active: !this.state.active})\n\t}\n\n\ttimeChangeHandler(time){\n\t\tthis.setState({\n\t\t\t\tvalue: time\n\t\t});\n\t}\n\n\tchangeStartHandler(time){\n\t\tconsole.log(\"Start Handler Called\", time);\n\t}\n\n\tchangeCompleteHandler(time){\n\t\tconsole.log(\"Complete Handler Called\", time);\n\t}\n\n\trender() {\n\t\tif (this.props.cell) {\n\t\t\tif (['Отпуск', 'Заболел'].includes(this.props.cell['receptionInfo'])) {\n\t\t\t\treturn (\n\t\t\t\t\t<div className={styles.colEmpty}>\n\t\t\t\t\t\t<div className={styles.date}>\n\t\t\t\t\t\t\t{this.props.cell['date']}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.time}>\n\t\t\t\t\t\t\t{this.props.cell['receptionInfo']}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else if (this.props.cell['receptionInfo']) {\n\t\t\t\tconst [start, end] = info2time(this.props.cell['receptionInfo'])\n\t\t\t\treturn (\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName={this.state.active ? styles.colAcive : styles.col}\n\t\t\t\t\t\tonClick={() => {this.props.handleClick(this.props.cell); this.changeStyle()}}>\n\t\t\t\t\t\t<div className={styles.date}>\n\t\t\t\t\t\t\t{this.props.cell['date']}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.time}>\n\t\t\t\t\t\t<TimeRangeSlider\n                disabled={false}\n                format={24}\n                maxValue={end}\n                minValue={start}\n                name={\"time_range\"}\n                // onChangeStart={this.changeStartHandler}\n                // onChangeComplete={this.changeCompleteHandler}\n                onChange={this.timeChangeHandler}\n                step={15}\n                value={this.state.value}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div className={styles.colNotAllowed}>\n\t\t\t\t\t\t<div className={styles.date}>\n\t\t\t\t\t\t\t{this.props.cell['date']}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\t\treturn <div className={styles.colEmpty} ></div>\n\t\t}\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}