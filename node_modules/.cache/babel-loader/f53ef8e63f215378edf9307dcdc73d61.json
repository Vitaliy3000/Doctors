{"ast":null,"code":"import { registrationUser } from '../back';\nimport { getDepartments, getDoctors, getSchedule } from '../proxyEmias';\nexport const loadDepartments = payload => {\n  return function (dispatch) {\n    dispatch(loadDepartmentsAction);\n    return getDepartments(...payload).then(response => {\n      if (response.status !== 200) {\n        throw 'Ошибка авторизации';\n      }\n\n      return response;\n    }).then(response => response.json()).then(response => {\n      registrationUser(...payload).then(innerResponse => {\n        if (innerResponse.status !== 200 || innerResponse.status !== 201) {\n          throw 'Ошибка авторизации';\n        }\n\n        return response;\n      }).then(response => dispatch(loadDepartmentsSuccess(response)));\n    }).catch(() => dispatch(loadDepartmentsFailureAction));\n  };\n};\nexport const loadDoctors = payload => {\n  return function (dispatch) {\n    dispatch(loadDoctorsAction);\n    return getDoctors(...payload).then(response => response.json()).then(response => dispatch(loadDoctorsSuccess(response))).catch(() => dispatch(loadDoctorsFailureAction));\n  };\n};\nexport const loadSchedule = payload => {\n  return function (dispatch) {\n    dispatch(loadScheduleAction);\n    return getSchedule(...payload).then(response => response.json()).then(response => dispatch(loadScheduleSuccess(response))).catch(() => dispatch(loadScheduleFailureAction));\n  };\n};\nexport const loadDepartmentsAction = {\n  type: 'LOAD_DEPARTMENTS',\n  payload: null\n};\nexport const loadDepartmentsFailureAction = {\n  type: 'LOAD_DEPARTMENTS_FAILURE',\n  payload: 'Авторизация завершилась с ошибкой'\n};\nexport const loadDepartmentsSuccess = payload => {\n  return {\n    type: 'LOAD_DEPARTMENTS_SUCCESS',\n    payload: payload\n  };\n};\nexport const loadDoctorsAction = {\n  type: 'LOAD_DOCTORS',\n  payload: null\n};\nexport const loadDoctorsFailureAction = {\n  type: 'LOAD_DOCTORS_FAILURE',\n  payload: 'Авторизация завершилась с ошибкой'\n};\nexport const loadDoctorsSuccess = payload => {\n  return {\n    type: 'LOAD_DOCTORS_SUCCESS',\n    payload: payload\n  };\n};\nexport const loadScheduleAction = {\n  type: 'LOAD_SCHEDULE',\n  payload: null\n};\nexport const loadScheduleFailureAction = {\n  type: 'LOAD_SCHEDULE_FAILURE',\n  payload: 'Авторизация завершилась с ошибкой'\n};\nexport const loadScheduleSuccess = payload => {\n  return {\n    type: 'LOAD_SCHEDULE_SUCCESS',\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/redux/emias/actions.js"],"names":["registrationUser","getDepartments","getDoctors","getSchedule","loadDepartments","payload","dispatch","loadDepartmentsAction","then","response","status","json","innerResponse","loadDepartmentsSuccess","catch","loadDepartmentsFailureAction","loadDoctors","loadDoctorsAction","loadDoctorsSuccess","loadDoctorsFailureAction","loadSchedule","loadScheduleAction","loadScheduleSuccess","loadScheduleFailureAction","type"],"mappings":"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","sourcesContent":["import { registrationUser } from '../back'\nimport { getDepartments, getDoctors, getSchedule } from '../proxyEmias'\n\n\nexport const loadDepartments = payload => {\n\treturn function(dispatch) {\n    dispatch(loadDepartmentsAction);\n    return getDepartments(...payload)\n            .then(response => {\n              if (response.status !== 200) {throw 'Ошибка авторизации'}\n              return response\n            })\n            .then(response => response.json())\n            .then(response => {\n              registrationUser(...payload)\n              .then(innerResponse => {\n                if ((innerResponse.status !== 200) || (innerResponse.status !== 201)) {\n                  throw 'Ошибка авторизации'\n                }\n                return response;\n              })\n              .then(response => dispatch(loadDepartmentsSuccess(response)));\n            })\n            .catch(() => dispatch(loadDepartmentsFailureAction));\n\t};\n};\n\nexport const loadDoctors = payload => {\n\treturn function(dispatch) {\n    dispatch(loadDoctorsAction);\n    return getDoctors(...payload)\n            .then(response => response.json())\n            .then(response => dispatch(loadDoctorsSuccess(response)))\n            .catch(() => dispatch(loadDoctorsFailureAction));\n\t};\n};\n\n\nexport const loadSchedule = payload => {\n\treturn function(dispatch) {\n    dispatch(loadScheduleAction);\n    return getSchedule(...payload)\n            .then(response => response.json())\n            .then(response => dispatch(loadScheduleSuccess(response)))\n            .catch(() => dispatch(loadScheduleFailureAction));\n\t};\n};\n\n\nexport const loadDepartmentsAction = {\n\ttype: 'LOAD_DEPARTMENTS',\n\tpayload: null,\n};\n\n\nexport const loadDepartmentsFailureAction = {\n\ttype: 'LOAD_DEPARTMENTS_FAILURE',\n\tpayload: 'Авторизация завершилась с ошибкой',\n};\n\n\nexport const loadDepartmentsSuccess = payload => {\n  return ({\n\ttype: 'LOAD_DEPARTMENTS_SUCCESS',\n\tpayload: payload,\n});}\n\n\nexport const loadDoctorsAction = {\n\ttype: 'LOAD_DOCTORS',\n\tpayload: null,\n};\n\n\nexport const loadDoctorsFailureAction = {\n\ttype: 'LOAD_DOCTORS_FAILURE',\n\tpayload: 'Авторизация завершилась с ошибкой',\n};\n\n\nexport const loadDoctorsSuccess = payload => {\n  return ({\n\ttype: 'LOAD_DOCTORS_SUCCESS',\n\tpayload: payload,\n});}\n\n\nexport const loadScheduleAction = {\n\ttype: 'LOAD_SCHEDULE',\n\tpayload: null,\n};\n\n\nexport const loadScheduleFailureAction = {\n\ttype: 'LOAD_SCHEDULE_FAILURE',\n\tpayload: 'Авторизация завершилась с ошибкой',\n};\n\n\nexport const loadScheduleSuccess = payload => {\n  return ({\n\ttype: 'LOAD_SCHEDULE_SUCCESS',\n\tpayload: payload,\n});}\n\n"]},"metadata":{},"sourceType":"module"}