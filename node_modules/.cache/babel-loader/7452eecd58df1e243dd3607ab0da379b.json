{"ast":null,"code":"var _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/pages/DoctorPage.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from 'react-bootstrap/Spinner';\nimport LinkItem from '../components/LinkItem/LinkItem';\nimport styles from './DefaultPage.module.css';\nimport { loadDoctors, loadSchedule } from '../redux/emias/actions';\n\nclass DoctorPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderLoadPage = () => React.createElement(\"div\", {\n      className: styles.loadPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n  handleDoctor() {\n    console.log('props doctor', this.props);\n    this.props.loadDoctors([this.props.omsNumber, this.props.birthDate, this.props.match.params.departmentId]);\n  }\n\n  handleSchedule() {\n    this.props.loadSchedule([this.props.lpuId]);\n  }\n\n  componentDidMount() {\n    this.handleDoctor();\n  }\n\n  componentDidUpdate() {\n    console.log('update doctor', this.props);\n\n    if (this.props.lpuId && (!this.props.schedule || this.props.schedule.length === 0)) {\n      console.log('update doctor');\n      this.handleSchedule();\n    }\n  }\n\n  renderPage() {\n    console.log('cloud with doctors', this.props);\n    return React.createElement(\"div\", {\n      className: styles.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: styles.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.doctors.filter(doctor => doctor.complexResource.length).map(doctor => React.createElement(NavLink, {\n      key: doctor.id,\n      to: \"doctor/\".concat(doctor.id, \"/schedule\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(LinkItem, {\n      key: doctor.id,\n      index: doctor.id,\n      text: doctor.mainDoctor.lastName + ' ' + doctor.mainDoctor.firstName + ' ' + doctor.mainDoctor.secondName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))));\n  }\n\n  render() {\n    return this.props.loadingFlag ? this.renderLoadPage() : this.renderPage();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('state doctor', state);\n  return {\n    doctors: state.emias.doctors,\n    loadingFlag: !state.emias.doctors,\n    omsNumber: state.user.omsNumber,\n    birthDate: state.user.birthDate,\n    lpuId: state.emias.doctors && state.emias.doctors.length !== 0 && state.emias.doctors[0].lpuId,\n    schedule: state.emias.schedule\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadDoctors: payload => dispatch(loadDoctors(payload)),\n  loadSchedule: payload => dispatch(loadSchedule(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorPage);","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/pages/DoctorPage.js"],"names":["React","NavLink","connect","Spinner","LinkItem","styles","loadDoctors","loadSchedule","DoctorPage","Component","renderLoadPage","loadPage","handleDoctor","console","log","props","omsNumber","birthDate","match","params","departmentId","handleSchedule","lpuId","componentDidMount","componentDidUpdate","schedule","length","renderPage","page","list","doctors","filter","doctor","complexResource","map","id","mainDoctor","lastName","firstName","secondName","render","loadingFlag","mapStateToProps","state","emias","user","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport LinkItem from '../components/LinkItem/LinkItem'\n\nimport styles from './DefaultPage.module.css'\n\nimport { loadDoctors, loadSchedule } from '../redux/emias/actions';\n\nclass DoctorPage extends React.Component {\n  handleDoctor () {\n    console.log('props doctor', this.props)\n    this.props.loadDoctors([this.props.omsNumber, this.props.birthDate, this.props.match.params.departmentId])\n  }\n\n  handleSchedule() {\n    this.props.loadSchedule([this.props.lpuId])\n  }\n\n  componentDidMount() {\n    this.handleDoctor()\n  }\n\n  componentDidUpdate() {\n    console.log('update doctor', this.props)\n    if (this.props.lpuId && (!this.props.schedule || this.props.schedule.length === 0)) {\n      console.log('update doctor');\n      this.handleSchedule();\n    }\n  }\n\n  renderPage() {\n    console.log('cloud with doctors', this.props)\n    return (\n      <div className={styles.page}>\n        <ul className={styles.list}>\n          {this.props.doctors.filter(doctor => doctor.complexResource.length).map(doctor =>\n            <NavLink key={doctor.id} to={`doctor/${doctor.id}/schedule`} >\n              <LinkItem\n                key={doctor.id}\n                index={doctor.id}\n                text={doctor.mainDoctor.lastName + ' ' + doctor.mainDoctor.firstName + ' ' + doctor.mainDoctor.secondName} />\n            </NavLink>)\n          }\n        </ul>\n      </div>\n    );\n  }\n\n  renderLoadPage = () =>  (\n    <div className={styles.loadPage} ><Spinner animation='border' variant='primary' /></div>\n  );\n\n  render() {\n    return this.props.loadingFlag ? this.renderLoadPage() : this.renderPage();\n  }\n}\n\n\nconst mapStateToProps = state => {console.log('state doctor', state); return(\n  {\n    doctors: state.emias.doctors,\n    loadingFlag: !state.emias.doctors,\n    omsNumber: state.user.omsNumber,\n    birthDate: state.user.birthDate,\n    lpuId: state.emias.doctors && state.emias.doctors.length !== 0 && state.emias.doctors[0].lpuId,\n    schedule: state.emias.schedule,\n  }\n);}\n\nconst mapDispatchToProps = dispatch => ({\n  loadDoctors: payload => dispatch(loadDoctors(payload)),\n  loadSchedule: payload => dispatch(loadSchedule(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorPage);\n"]},"metadata":{},"sourceType":"module"}