{"ast":null,"code":"var _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/components/AuthorizationForm/AuthorizationForm.js\";\nimport React from 'react';\nimport MaskedInput from 'react-maskedinput';\nimport Button from 'react-bootstrap/Button';\nimport styles from './AuthorizationForm.module.css';\nimport { connect } from 'react-redux';\nimport { formatBirthDate } from './utils/datetime';\nconst emptyState = {\n  omsNumber: '',\n  birthDate: '',\n  error: ''\n};\n\nconst fieldIsEmpty = value => value === '' || value.includes('_');\n\nclass AuthorizationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.hasEmptyFields = () => ['omsNumber', 'birthDate'].some(field => fieldIsEmpty(this.state[field]));\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (!this.formIsValid()) {\n        this.setFormError();\n        return;\n      }\n\n      this.fetchSchedule(this.state.omsNumber, formatBirthDate(this.state.birthDate));\n      this.clearForm();\n    };\n\n    this.fetchSchedule = (omsNumber, birthDate) => this.props.loadSchedule([omsNumber, birthDate]);\n\n    this.handleInputChange = event => {\n      this.setState({\n        error: '',\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = emptyState;\n  }\n\n  clearForm() {\n    this.setState(emptyState);\n  }\n\n  formIsValid() {\n    return !this.hasEmptyFields();\n  }\n\n  setFormError() {\n    const errors = [{\n      text: 'Необходимо заполнить все поля формы',\n      matched: this.hasEmptyFields()\n    }];\n    const currentError = errors.find(error => error.matched);\n\n    if (currentError) {\n      this.setState({\n        error: currentError.text\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: styles.authorizationForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u044C \\u043A \\u0432\\u0440\\u0430\\u0447\\u0443\"), React.createElement(\"div\", {\n      className: styles.fields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(MaskedInput, {\n      mask: \"1111111111111111\",\n      name: \"omsNumber\",\n      value: this.state.omsNumber,\n      onChange: this.handleInputChange,\n      placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043F\\u043E\\u043B\\u0438\\u0441\\u0430\",\n      className: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(MaskedInput, {\n      mask: \"11/11/1111\",\n      name: \"birthDate\",\n      value: this.state.birthDate,\n      onChange: this.handleInputChange,\n      placeholder: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\",\n      className: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), this.state.error && React.createElement(\"div\", {\n      className: styles.errorWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.error), React.createElement(Button, {\n      className: styles.button,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"));\n  }\n\n}\n\nconst mapStateToProps = state => {}; //{console.log('mapStateToProps',state); \n//                                   return { schedule: state.schedule,\n//                                   // authorizationFlag: Boolean(state.schedule.schedule.length),\n//                                   textError: state.schedule.textError,\n//                                   loadingFlag: state.schedule.loadingFlag}};\n\n\nconst mapDispatchToProps = dispatch => ({\n  loadSchedule: payload => dispatch(loadSchedule(payload))\n});\n\nexport { AuthorizationForm };\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizationForm);","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/components/AuthorizationForm/AuthorizationForm.js"],"names":["React","MaskedInput","Button","styles","connect","formatBirthDate","emptyState","omsNumber","birthDate","error","fieldIsEmpty","value","includes","AuthorizationForm","Component","constructor","props","hasEmptyFields","some","field","state","handleSubmit","event","preventDefault","formIsValid","setFormError","fetchSchedule","clearForm","loadSchedule","handleInputChange","setState","target","name","errors","text","matched","currentError","find","render","authorizationForm","fields","input","errorWrapper","button","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaskedInput from 'react-maskedinput';\n\nimport Button from 'react-bootstrap/Button'\n\nimport styles from './AuthorizationForm.module.css';\n\nimport { connect } from 'react-redux';\n\nimport { formatBirthDate } from './utils/datetime';\n\nconst emptyState =  {\n\tomsNumber: '',\n\tbirthDate: '',\n\terror: '',\n};\n\nconst fieldIsEmpty = value => value === '' || value.includes('_');\n\nclass AuthorizationForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = emptyState;\n\t}\n\n\tclearForm() {\n\t\tthis.setState(emptyState);\n\t}\n\n\thasEmptyFields = () =>\n\t\t['omsNumber', 'birthDate'].some(field =>\n\t\t\tfieldIsEmpty(this.state[field])\n\t);\n\n\tformIsValid() {\n\t\treturn !this.hasEmptyFields();\n\t}\n\n\tsetFormError() {\n\t\tconst errors = [\n\t\t\t{\n\t\t\t\ttext: 'Необходимо заполнить все поля формы',\n\t\t\t\tmatched: this.hasEmptyFields(),\n\t\t\t},\n\t\t];\n\n\t\tconst currentError = errors.find(error => error.matched);\n\n\t\tif (currentError) {\n\t\t\tthis.setState({ error: currentError.text });\n\t\t}\n\t}\n\n\thandleSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\tif (!this.formIsValid()) {\n\t\t\tthis.setFormError();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fetchSchedule(this.state.omsNumber, formatBirthDate(this.state.birthDate));\n\n\t\tthis.clearForm();\n\t};\n\n\tfetchSchedule = (omsNumber, birthDate) => this.props.loadSchedule([omsNumber, birthDate]);\n\n\thandleInputChange = event => {\n\t\tthis.setState({\n\t\t\terror: '',\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit} className={styles.authorizationForm}>\n\t\t\t\t<h2>Запись к врачу</h2>\n\t\t\t\t<div className={styles.fields}>\n\t\t\t\t\t<MaskedInput\n\t\t\t\t\t\tmask=\"1111111111111111\"\n\t\t\t\t\t\tname=\"omsNumber\"\n\t\t\t\t\t\tvalue={this.state.omsNumber}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tplaceholder=\"Номер полиса\"\n\t\t\t\t\t\tclassName={styles.input}\n\t\t\t\t\t/>\n          <MaskedInput\n\t\t\t\t\t\tmask=\"11/11/1111\"\n\t\t\t\t\t\tname=\"birthDate\"\n\t\t\t\t\t\tvalue={this.state.birthDate}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tplaceholder=\"Дата рождения\"\n\t\t\t\t\t\tclassName={styles.input}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{this.state.error && (\n\t\t\t\t\t\t<div className={styles.errorWrapper}>{this.state.error}</div>\n\t\t\t\t)}\n\t\t\t\t<Button className={styles.button} type=\"submit\">Продолжить</Button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\n\n\nconst mapStateToProps = state => {}\n//{console.log('mapStateToProps',state); \n//                                   return { schedule: state.schedule,\n//                                   // authorizationFlag: Boolean(state.schedule.schedule.length),\n//                                   textError: state.schedule.textError,\n//                                   loadingFlag: state.schedule.loadingFlag}};\nconst mapDispatchToProps = dispatch => ({\n\tloadSchedule: payload => dispatch(loadSchedule(payload)),\n});\n\n\nexport { AuthorizationForm };\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(AuthorizationForm);\n"]},"metadata":{},"sourceType":"module"}