{"ast":null,"code":"var _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/components/AuthorizationForm/AuthorizationForm.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport MaskedInput from 'react-maskedinput';\nimport { connect } from 'react-redux';\nimport Button from '../Button/Button';\nimport styles from './AuthorizationForm.module.css';\nimport { formatBirthDate } from '../../utils/datetime';\nimport { loadSchedule } from '../../redux/schedule/actions';\nconst emptyState = {\n  omsNumber: '',\n  birthDate: '',\n  error: ''\n};\n\nconst fieldIsEmpty = value => value === '' || value.includes('_');\n\nclass AuthorizationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.hasEmptyFields = () => ['omsNumber', 'birthDate'].some(field => fieldIsEmpty(this.state[field]));\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (!this.formIsValid()) {\n        this.setFormError();\n        return;\n      }\n\n      this.props.loadSchedule([this.state.omsNumber, formatBirthDate(this.state.birthDate)]);\n      this.clearForm();\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        error: '',\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = emptyState;\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  clearForm() {\n    this.setState(emptyState);\n  }\n\n  formIsValid() {\n    return !this.hasEmptyFields();\n  }\n\n  setFormError() {\n    const errors = [{\n      text: 'Необходимо заполнить все поля формы',\n      matched: this.hasEmptyFields()\n    }];\n    const currentError = errors.find(error => error.matched);\n\n    if (currentError) {\n      this.setState({\n        error: currentError.text\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      action: \"/appointment/department\",\n      onSubmit: this.handleSubmit,\n      className: styles.authorizationForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u044C \\u043A \\u0432\\u0440\\u0430\\u0447\\u0443\"), React.createElement(\"div\", {\n      className: styles.fields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(MaskedInput, {\n      mask: \"1111111111111111\",\n      name: \"omsNumber\",\n      value: this.state.omsNumber,\n      onChange: this.handleInputChange,\n      placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043F\\u043E\\u043B\\u0438\\u0441\\u0430\",\n      className: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(MaskedInput, {\n      mask: \"11/11/1111\",\n      name: \"birthDate\",\n      value: this.state.birthDate,\n      onChange: this.handleInputChange,\n      placeholder: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\",\n      className: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), this.state.error && React.createElement(\"div\", {\n      className: styles.errorWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.error), React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    schedule: state.schedule,\n    textError: state.schedule.textError,\n    loadingFlag: state.schedule.loadingFlag\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadSchedule: payload => dispatch(loadSchedule(payload))\n});\n\nexport { AuthorizationForm };\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizationForm);","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/components/AuthorizationForm/AuthorizationForm.js"],"names":["React","NavLink","MaskedInput","connect","Button","styles","formatBirthDate","loadSchedule","emptyState","omsNumber","birthDate","error","fieldIsEmpty","value","includes","AuthorizationForm","Component","constructor","props","hasEmptyFields","some","field","state","handleSubmit","event","preventDefault","formIsValid","setFormError","clearForm","handleInputChange","setState","target","name","bind","errors","text","matched","currentError","find","render","authorizationForm","fields","input","errorWrapper","mapStateToProps","schedule","textError","loadingFlag","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport MaskedInput from 'react-maskedinput';\nimport { connect } from 'react-redux';\n\nimport Button from '../Button/Button'\n\nimport styles from './AuthorizationForm.module.css';\n\nimport { formatBirthDate } from '../../utils/datetime';\n\nimport { loadSchedule } from '../../redux/schedule/actions';\n\n\nconst emptyState =  {\n\tomsNumber: '',\n\tbirthDate: '',\n\terror: '',\n};\n\nconst fieldIsEmpty = value => value === '' || value.includes('_');\n\nclass AuthorizationForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = emptyState;\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t}\n\n\tclearForm() {\n\t\tthis.setState(emptyState);\n\t}\n\n\thasEmptyFields = () =>\n\t\t['omsNumber', 'birthDate'].some(field =>\n\t\t\tfieldIsEmpty(this.state[field])\n\t);\n\n\tformIsValid() {\n\t\treturn !this.hasEmptyFields();\n\t}\n\n\tsetFormError() {\n\t\tconst errors = [\n\t\t\t{\n\t\t\t\ttext: 'Необходимо заполнить все поля формы',\n\t\t\t\tmatched: this.hasEmptyFields(),\n\t\t\t},\n\t\t];\n\n\t\tconst currentError = errors.find(error => error.matched);\n\n\t\tif (currentError) {\n\t\t\tthis.setState({ error: currentError.text });\n\t\t}\n\t}\n\n\thandleSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\tif (!this.formIsValid()) {\n\t\t\tthis.setFormError();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.props.loadSchedule([this.state.omsNumber, formatBirthDate(this.state.birthDate)]);\n\n\t\tthis.clearForm();\n\t};\n\n\thandleInputChange = event => {\n\t\tthis.setState({\n\t\t\terror: '',\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form action='/appointment/department' onSubmit={this.handleSubmit} className={styles.authorizationForm}>\n\t\t\t\t<h2>Запись к врачу</h2>\n\t\t\t\t<div className={styles.fields}>\n\t\t\t\t\t<MaskedInput\n\t\t\t\t\t\tmask=\"1111111111111111\"\n\t\t\t\t\t\tname=\"omsNumber\"\n\t\t\t\t\t\tvalue={this.state.omsNumber}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tplaceholder=\"Номер полиса\"\n\t\t\t\t\t\tclassName={styles.input}\n\t\t\t\t\t/>\n          <MaskedInput\n\t\t\t\t\t\tmask=\"11/11/1111\"\n\t\t\t\t\t\tname=\"birthDate\"\n\t\t\t\t\t\tvalue={this.state.birthDate}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tplaceholder=\"Дата рождения\"\n\t\t\t\t\t\tclassName={styles.input}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{this.state.error && (\n\t\t\t\t\t\t<div className={styles.errorWrapper}>{this.state.error}</div>\n\t\t\t\t)}\n\t\t\t\t<Button type=\"submit\" onClick={this.handleSubmit} >Авторизоваться</Button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\n\nconst mapStateToProps = state => {\n                                  return { schedule: state.schedule,\n                                  textError: state.schedule.textError,\n                                  loadingFlag: state.schedule.loadingFlag}};\nconst mapDispatchToProps = dispatch => ({\n\tloadSchedule: payload => dispatch(loadSchedule(payload))\n});\n\n\nexport { AuthorizationForm };\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(AuthorizationForm);\n"]},"metadata":{},"sourceType":"module"}