{"ast":null,"code":"export default ((state = [], action) => {\n  console.log('red_sch', state);\n\n  switch (action.type) {\n    case 'INIT_SCHEDULE':\n      return {\n        schedule: {\n          'departments': []\n        },\n        textError: '',\n        loadingFlag: false\n      };\n\n    case 'LOAD_SCHEDULE':\n      return {\n        schedule: {\n          'departments': []\n        },\n        textError: '',\n        loadingFlag: true\n      };\n\n    case 'LOAD_SCHEDULE_FAILURE':\n      return {\n        schedule: {\n          'departments': []\n        },\n        textError: action.payload,\n        loadingFlag: false\n      };\n\n    case 'LOAD_SCHEDULE_SUCCESS':\n      console.log('epicFail_load', JSON.parse(JSON.stringify(action.payload)));\n      return {\n        schedule: action.payload,\n        textError: '',\n        loadingFlag: false\n      };\n\n    case 'RESET_SCHEDULE':\n      return {\n        schedule: {\n          'departments': []\n        },\n        textError: '',\n        loadingFlag: false\n      };\n\n    default:\n      console.log('epicFail_def', JSON.parse(JSON.stringify(state)));\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/redux/schedule/reducer.js"],"names":["state","action","console","log","type","schedule","textError","loadingFlag","payload","JSON","parse","stringify"],"mappings":"AAAA,gBAAe,CAACA,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;;AACA,UAAQC,MAAM,CAACG,IAAf;AACC,SAAK,eAAL;AACI,aAAO;AAACC,QAAAA,QAAQ,EAAE;AAAC,yBAAe;AAAhB,SAAX;AAAgCC,QAAAA,SAAS,EAAE,EAA3C;AAA+CC,QAAAA,WAAW,EAAE;AAA5D,OAAP;;AAEJ,SAAK,eAAL;AACC,aAAO;AAACF,QAAAA,QAAQ,EAAE;AAAC,yBAAe;AAAhB,SAAX;AAAgCC,QAAAA,SAAS,EAAE,EAA3C;AAA+CC,QAAAA,WAAW,EAAE;AAA5D,OAAP;;AAED,SAAK,uBAAL;AACC,aAAO;AAACF,QAAAA,QAAQ,EAAE;AAAC,yBAAe;AAAhB,SAAX;AAAgCC,QAAAA,SAAS,EAAEL,MAAM,CAACO,OAAlD;AAA2DD,QAAAA,WAAW,EAAE;AAAxE,OAAP;;AAED,SAAK,uBAAL;AACCL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,MAAM,CAACO,OAAtB,CAAX,CAA7B;AACA,aAAO;AAACH,QAAAA,QAAQ,EAAEJ,MAAM,CAACO,OAAlB;AAA2BF,QAAAA,SAAS,EAAE,EAAtC;AAA0CC,QAAAA,WAAW,EAAE;AAAvD,OAAP;;AAED,SAAK,gBAAL;AACC,aAAO;AAACF,QAAAA,QAAQ,EAAE;AAAC,yBAAe;AAAhB,SAAX;AAAgCC,QAAAA,SAAS,EAAE,EAA3C;AAA+CC,QAAAA,WAAW,EAAE;AAA5D,OAAP;;AAED;AACCL,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,KAAf,CAAX,CAA5B;AACG,aAAOA,KAAP;AAnBL;AAqBA,CAvBD","sourcesContent":["export default (state=[], action) => {\n\tconsole.log('red_sch', state)\n\tswitch (action.type) {\n\t\tcase 'INIT_SCHEDULE':\n      return {schedule: {'departments': []}, textError: '', loadingFlag: false};\n\n\t\tcase 'LOAD_SCHEDULE':\n\t\t\treturn {schedule: {'departments': []}, textError: '', loadingFlag: true};\n\n\t\tcase 'LOAD_SCHEDULE_FAILURE':\n\t\t\treturn {schedule: {'departments': []}, textError: action.payload, loadingFlag: false};\n\n\t\tcase 'LOAD_SCHEDULE_SUCCESS':\n\t\t\tconsole.log('epicFail_load', JSON.parse(JSON.stringify(action.payload)))\n\t\t\treturn {schedule: action.payload, textError: '', loadingFlag: false};\n\n\t\tcase 'RESET_SCHEDULE':\n\t\t\treturn {schedule: {'departments': []}, textError: '', loadingFlag: false};\n\n\t\tdefault:\n\t\t\tconsole.log('epicFail_def', JSON.parse(JSON.stringify(state)))\n      return state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}