{"ast":null,"code":"import _slicedToArray from \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NotFoundPage from './pages/NotFoundPage';\nimport HelloPage from './pages/HelloPage';\nimport HelpPage from './pages/HelpPage';\nimport AppointmentPage from './pages/AppointmentPage';\nimport DepartmentPage from './pages/DepartmentPage';\nimport DoctorPage from './pages/DoctorPage';\nimport SchedulePage from './pages/SchedulePage';\nimport AuthorizationPage from './pages/AuthorizationPage';\nimport Header from './components/Header/Header';\nimport styles from './App.module.css';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction formatBirthDate(date) {\n  const _date$split = date.split('/'),\n        _date$split2 = _slicedToArray(_date$split, 3),\n        day = _date$split2[0],\n        month = _date$split2[1],\n        year = _date$split2[2];\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n}\n\nconst PROXY_URL = \"https://proxy-q-doctor.herokuapp.com/api/emias/\";\nconst SCHEDULE_URL = \"schedule\";\nlocalStorage.clear();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleAuthorization = person => {\n      localStorage.setItem('birthDate', formatBirthDate(person.birthDate));\n      localStorage.setItem('omsNumber', person.omsNumber);\n      this.fetchSchedule(localStorage.getItem('omsNumber'), localStorage.getItem('birthDate'));\n    };\n  }\n\n  fetchSchedule(omsNumber, birthDate) {\n    console.log(omsNumber, birthDate);\n    return fetch(PROXY_URL + SCHEDULE_URL + \"?oms_number=\".concat(omsNumber, \"&birth_date=\").concat(birthDate), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(response => localStorage.setItem('schedule', JSON.stringify(response))); // .catch(err => localStorage.setItem('schedule', JSON.stringify({})));\n  }\n\n  render() {\n    console.log(localStorage);\n    return React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Loading...\")) //   <div className={styles.App}>\n    //     <Router>\n    //         <Header />\n    //         <div className={styles.main}>\n    //         <Spinner animation=\"border\" role=\"status\">\n    //           <span className=\"sr-only\">Loading...</span>\n    //         </Spinner>\n    //         <Spinner animation=\"border\" variant=\"primary\" className={styles.spinner} />\n    //           <Switch>\n    //             <Route exact path=\"/\" component={HelloPage} />\n    //             <Route path=\"/authorization\">\n    //               <AuthorizationPage handleSubmit={this.handleAuthorization} />\n    //             </Route>\n    //             <Route path=\"/appointment/department/:departmentId/doctor/:doctorId/schedule\" component={SchedulePage} />\n    //             <Route path=\"/appointment/department/:departmentId/doctor\" component={DoctorPage} />\n    //             <Route path=\"/appointment/department\">\n    //               <DepartmentPage />\n    //             </Route>\n    //             <Route path=\"/appointments\">\n    //               <AppointmentPage />\n    //             </Route>\n    //             <Route path=\"/help\" component={HelpPage} />\n    //             <Route path=\"/\" component={NotFoundPage} />\n    //           </Switch>\n    //         </div>\n    //     </Router>\n    //  </div>\n    ;\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Route","Switch","NotFoundPage","HelloPage","HelpPage","AppointmentPage","DepartmentPage","DoctorPage","SchedulePage","AuthorizationPage","Header","styles","Spinner","formatBirthDate","date","split","day","month","year","PROXY_URL","SCHEDULE_URL","localStorage","clear","App","handleAuthorization","person","setItem","birthDate","omsNumber","fetchSchedule","getItem","console","log","fetch","headers","then","response","json","JSON","stringify","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;;AAGA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAAA,sBACHA,IAAI,CAACC,KAAL,CAAW,GAAX,CADG;AAAA;AAAA,QACvBC,GADuB;AAAA,QAClBC,KADkB;AAAA,QACXC,IADW;;AAE9B,mBAAUA,IAAV,cAAkBD,KAAlB,cAA2BD,GAA3B;AACA;;AAGD,MAAMG,SAAS,GAAG,iDAAlB;AACA,MAAMC,YAAY,GAAG,UAArB;AAIAC,YAAY,CAACC,KAAb;;AAEA,MAAMC,GAAN,SAAkB5B,KAAK,CAACC,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAUhC4B,mBAVgC,GAUVC,MAAM,IAAI;AAC9BJ,MAAAA,YAAY,CAACK,OAAb,CAAqB,WAArB,EAAkCb,eAAe,CAACY,MAAM,CAACE,SAAR,CAAjD;AACAN,MAAAA,YAAY,CAACK,OAAb,CAAqB,WAArB,EAAkCD,MAAM,CAACG,SAAzC;AACA,WAAKC,aAAL,CAAmBR,YAAY,CAACS,OAAb,CAAqB,WAArB,CAAnB,EAAsDT,YAAY,CAACS,OAAb,CAAqB,WAArB,CAAtD;AACD,KAd+B;AAAA;;AAChCD,EAAAA,aAAa,CAACD,SAAD,EAAYD,SAAZ,EAAuB;AAClCI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBD,SAAvB;AACA,WAAOM,KAAK,CAACd,SAAS,GAACC,YAAV,yBAAsCQ,SAAtC,yBAA8DD,SAA9D,CAAD,EACC;AAACO,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAAV,KADD,CAAL,CAEJC,IAFI,CAECC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFb,EAGEF,IAHF,CAGOC,QAAQ,IAAIf,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCY,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAjC,CAHnB,CAAP,CAFkC,CAM1B;AACT;;AAQDI,EAAAA,MAAM,GAAG;AACPT,IAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACA,WAEE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADI,CAFF,CAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AA3CA;AA6CD;;AA/D+B;;AAgEjC;AAED,eAAeE,GAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport NotFoundPage from './pages/NotFoundPage';\nimport HelloPage from './pages/HelloPage';\nimport HelpPage from './pages/HelpPage';\nimport AppointmentPage from './pages/AppointmentPage';\nimport DepartmentPage from './pages/DepartmentPage';\nimport DoctorPage from './pages/DoctorPage';\nimport SchedulePage from './pages/SchedulePage';\nimport AuthorizationPage from './pages/AuthorizationPage';\n\nimport Header from './components/Header/Header';\n\nimport styles from './App.module.css';\n\nimport Spinner from 'react-bootstrap/Spinner'\n\n\nfunction formatBirthDate(date) {\n\tconst [day, month, year] = date.split('/');\n\treturn `${year}-${month}-${day}`\n}\n\n\nconst PROXY_URL = \"https://proxy-q-doctor.herokuapp.com/api/emias/\"\nconst SCHEDULE_URL = \"schedule\"\n\n\n\nlocalStorage.clear()\n\nclass App extends React.Component {\n  fetchSchedule(omsNumber, birthDate) {\n    console.log(omsNumber, birthDate)\n    return fetch(PROXY_URL+SCHEDULE_URL+`?oms_number=${omsNumber}&birth_date=${birthDate}`,\n                 {headers: {'Content-Type': 'application/json'}})\n\t\t\t\t\t\t.then(response => response.json())\n            .then(response => localStorage.setItem('schedule', JSON.stringify(response)))\n            // .catch(err => localStorage.setItem('schedule', JSON.stringify({})));\n  }\n\n  handleAuthorization = person => {\n    localStorage.setItem('birthDate', formatBirthDate(person.birthDate));\n    localStorage.setItem('omsNumber', person.omsNumber);\n    this.fetchSchedule(localStorage.getItem('omsNumber'), localStorage.getItem('birthDate'));\n  };\n\n  render() {\n    console.log(localStorage)\n    return (\n\n      <Spinner animation=\"border\" role=\"status\">\n  <span className=\"sr-only\">Loading...</span>\n</Spinner>\n    //   <div className={styles.App}>\n    //     <Router>\n\n    //         <Header />\n\n    //         <div className={styles.main}>\n    //         <Spinner animation=\"border\" role=\"status\">\n    //           <span className=\"sr-only\">Loading...</span>\n    //         </Spinner>\n    //         <Spinner animation=\"border\" variant=\"primary\" className={styles.spinner} />\n    //           <Switch>\n\n    //             <Route exact path=\"/\" component={HelloPage} />\n\n    //             <Route path=\"/authorization\">\n    //               <AuthorizationPage handleSubmit={this.handleAuthorization} />\n    //             </Route>\n\n    //             <Route path=\"/appointment/department/:departmentId/doctor/:doctorId/schedule\" component={SchedulePage} />\n\n    //             <Route path=\"/appointment/department/:departmentId/doctor\" component={DoctorPage} />\n\n    //             <Route path=\"/appointment/department\">\n    //               <DepartmentPage />\n    //             </Route>\n\n    //             <Route path=\"/appointments\">\n    //               <AppointmentPage />\n    //             </Route>\n\n    //             <Route path=\"/help\" component={HelpPage} />\n\n    //             <Route path=\"/\" component={NotFoundPage} />\n\n    //           </Switch>\n    //         </div>\n\n    //     </Router>\n    //  </div>\n    );\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}