{"ast":null,"code":"var _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/pages/DoctorPage.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from 'react-bootstrap/Spinner';\nimport LinkItem from '../components/LinkItem/LinkItem';\nimport styles from './DefaultPage.module.css';\nimport { loadDoctors } from '../redux/emias/actions';\n\nclass DoctorPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderLoadPage = () => React.createElement(\"div\", {\n      className: styles.loadPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n  handleDoctor() {\n    console.log('props doctor', this.props);\n    this.props.loadDoctors([this.props.omsNumber, this.props.birthDate, this.props.match.params.departmentId]);\n  }\n\n  handleSchedule() {\n    this.props.loadSchedule([this.props.lpuId]);\n  }\n\n  componentDidMount() {\n    this.handleDoctor();\n  }\n\n  componentDidUpdate() {\n    this.handleSchedule();\n  }\n\n  renderPage() {\n    console.log('cloud with doctors', this.props);\n    return React.createElement(\"div\", {\n      className: styles.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: styles.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.doctors.filter(doctor => doctor.complexResource.length).map(doctor => React.createElement(NavLink, {\n      key: doctor.id,\n      to: \"doctor/\".concat(doctor.id, \"/schedule\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(LinkItem, {\n      key: doctor.id,\n      index: doctor.id,\n      text: doctor.mainDoctor.lastName + ' ' + doctor.mainDoctor.firstName + ' ' + doctor.mainDoctor.secondName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })))));\n  }\n\n  render() {\n    return this.props.loadingFlag ? this.renderLoadPage() : this.renderPage();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('state doctor', state);\n  return {\n    doctors: state.emias.doctors,\n    loadingFlag: !state.emias.doctors,\n    omsNumber: state.user.omsNumber,\n    birthDate: state.user.birthDate,\n    lpuId: state.emias.doctors && state.emias.doctors.length !== 0 && state.emias.doctors[0].lpuId\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadDoctors: payload => dispatch(loadDoctors(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorPage);","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/pages/DoctorPage.js"],"names":["React","NavLink","connect","Spinner","LinkItem","styles","loadDoctors","DoctorPage","Component","renderLoadPage","loadPage","handleDoctor","console","log","props","omsNumber","birthDate","match","params","departmentId","handleSchedule","loadSchedule","lpuId","componentDidMount","componentDidUpdate","renderPage","page","list","doctors","filter","doctor","complexResource","length","map","id","mainDoctor","lastName","firstName","secondName","render","loadingFlag","mapStateToProps","state","emias","user","mapDispatchToProps","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAoCvCC,cApCuC,GAoCtB,MACf;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACK,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CArCqC;AAAA;;AACvCC,EAAAA,YAAY,GAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKC,KAAjC;AACA,SAAKA,KAAL,CAAWR,WAAX,CAAuB,CAAC,KAAKQ,KAAL,CAAWC,SAAZ,EAAuB,KAAKD,KAAL,CAAWE,SAAlC,EAA6C,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,YAArE,CAAvB;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,SAAKN,KAAL,CAAWO,YAAX,CAAwB,CAAC,KAAKP,KAAL,CAAWQ,KAAZ,CAAxB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,YAAL;AACD;;AAEDa,EAAAA,kBAAkB,GAAG;AACnB,SAAKJ,cAAL;AACD;;AAEDK,EAAAA,UAAU,GAAG;AACXb,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKC,KAAvC;AACA,WACE;AAAK,MAAA,SAAS,EAAET,MAAM,CAACqB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAErB,MAAM,CAACsB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWc,OAAX,CAAmBC,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACC,eAAP,CAAuBC,MAA3D,EAAmEC,GAAnE,CAAuEH,MAAM,IAC5E,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,MAAM,CAACI,EAArB;AAAyB,MAAA,EAAE,mBAAYJ,MAAM,CAACI,EAAnB,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEJ,MAAM,CAACI,EADd;AAEE,MAAA,KAAK,EAAEJ,MAAM,CAACI,EAFhB;AAGE,MAAA,IAAI,EAAEJ,MAAM,CAACK,UAAP,CAAkBC,QAAlB,GAA6B,GAA7B,GAAmCN,MAAM,CAACK,UAAP,CAAkBE,SAArD,GAAiE,GAAjE,GAAuEP,MAAM,CAACK,UAAP,CAAkBG,UAHjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF,CADF;AAcD;;AAMDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKzB,KAAL,CAAW0B,WAAX,GAAyB,KAAK/B,cAAL,EAAzB,GAAiD,KAAKgB,UAAL,EAAxD;AACD;;AA1CsC;;AA8CzC,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAAC9B,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B6B,KAA5B;AAAoC,SACpE;AACEd,IAAAA,OAAO,EAAEc,KAAK,CAACC,KAAN,CAAYf,OADvB;AAEEY,IAAAA,WAAW,EAAE,CAACE,KAAK,CAACC,KAAN,CAAYf,OAF5B;AAGEb,IAAAA,SAAS,EAAE2B,KAAK,CAACE,IAAN,CAAW7B,SAHxB;AAIEC,IAAAA,SAAS,EAAE0B,KAAK,CAACE,IAAN,CAAW5B,SAJxB;AAKEM,IAAAA,KAAK,EAAEoB,KAAK,CAACC,KAAN,CAAYf,OAAZ,IAAuBc,KAAK,CAACC,KAAN,CAAYf,OAAZ,CAAoBI,MAApB,KAA+B,CAAtD,IAA2DU,KAAK,CAACC,KAAN,CAAYf,OAAZ,CAAoB,CAApB,EAAuBN;AAL3F,GADoE;AAQnE,CARH;;AAUA,MAAMuB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCxC,EAAAA,WAAW,EAAEyC,OAAO,IAAID,QAAQ,CAACxC,WAAW,CAACyC,OAAD,CAAZ;AADO,CAAL,CAAnC;;AAIA,eAAe7C,OAAO,CAACuC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CtC,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport LinkItem from '../components/LinkItem/LinkItem'\n\nimport styles from './DefaultPage.module.css'\n\nimport { loadDoctors } from '../redux/emias/actions';\n\nclass DoctorPage extends React.Component {\n  handleDoctor () {\n    console.log('props doctor', this.props)\n    this.props.loadDoctors([this.props.omsNumber, this.props.birthDate, this.props.match.params.departmentId])\n  }\n\n  handleSchedule() {\n    this.props.loadSchedule([this.props.lpuId])\n  }\n\n  componentDidMount() {\n    this.handleDoctor()\n  }\n\n  componentDidUpdate() {\n    this.handleSchedule()\n  }\n\n  renderPage() {\n    console.log('cloud with doctors', this.props)\n    return (\n      <div className={styles.page}>\n        <ul className={styles.list}>\n          {this.props.doctors.filter(doctor => doctor.complexResource.length).map(doctor =>\n            <NavLink key={doctor.id} to={`doctor/${doctor.id}/schedule`} >\n              <LinkItem\n                key={doctor.id}\n                index={doctor.id}\n                text={doctor.mainDoctor.lastName + ' ' + doctor.mainDoctor.firstName + ' ' + doctor.mainDoctor.secondName} />\n            </NavLink>)\n          }\n        </ul>\n      </div>\n    );\n  }\n\n  renderLoadPage = () =>  (\n    <div className={styles.loadPage} ><Spinner animation='border' variant='primary' /></div>\n  );\n\n  render() {\n    return this.props.loadingFlag ? this.renderLoadPage() : this.renderPage();\n  }\n}\n\n\nconst mapStateToProps = state => {console.log('state doctor', state); return(\n  {\n    doctors: state.emias.doctors,\n    loadingFlag: !state.emias.doctors,\n    omsNumber: state.user.omsNumber,\n    birthDate: state.user.birthDate,\n    lpuId: state.emias.doctors && state.emias.doctors.length !== 0 && state.emias.doctors[0].lpuId\n  }\n);}\n\nconst mapDispatchToProps = dispatch => ({\n\tloadDoctors: payload => dispatch(loadDoctors(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorPage);\n"]},"metadata":{},"sourceType":"module"}