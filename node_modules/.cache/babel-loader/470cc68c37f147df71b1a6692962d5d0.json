{"ast":null,"code":"import _defineProperty from \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/components/Schedule/Schedule.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport styles from './Schedule.module.css';\nimport Department from './Department/Department';\nimport Doctor from './Doctor/Doctor';\nimport ScheduleFrame from './ScheduleFrame/ScheduleFrame';\nconst BASE_URL = \"https://api.emias.info/jsonproxyportal/v1/\";\nconst DEPARTMENT_URL = \"?get_specialities_info\";\nconst DOCTOR_URL = \"?get_doctors_info\";\nconst SHEDULE_URL = \"\";\nconst DEFAULT_DATA = {\n  id: \"\",\n  jsonrpc: \"2.0\"\n};\nexport default class Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      departments: [],\n      doctors: [],\n      schedule: [],\n      department: '',\n      doctor: ''\n    };\n    this.handleClickDepartment = this.handleClickDepartment.bind(this);\n    this.handleClickDoctor = this.handleClickDoctor.bind(this);\n  }\n\n  fetchDepartments(oms_number, birth_date) {\n    const data = Object.assign({\n      method: \"get_specialities_info\",\n      params: {\n        birth_date,\n        oms_number\n      }\n    }, DEFAULT_DATA);\n    return fetch(BASE_URL + DEPARTMENT_URL, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(response => response['result']).then(response => this.setState(_objectSpread({}, this.state, {\n      departments: response\n    })));\n  }\n\n  fetchDoctors(oms_number, birth_date, speciality_id, referral_id = null) {\n    const data = Object.assign({\n      method: \"get_doctors_info\",\n      params: {\n        birth_date,\n        oms_number,\n        speciality_id,\n        referral_id\n      }\n    }, DEFAULT_DATA);\n    return fetch(BASE_URL + DOCTOR_URL, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(response => response['result']).then(response => this.setState(_objectSpread({}, this.state, {\n      doctors: response,\n      lpuId: this.state.lpuId ? this.state.lpuId : Number.parseInt(response[0]['lpuRoomsInfo']['lpuRoomView'][0]['lpuId'])\n    })));\n  }\n\n  doctorFromSchedule(promise, doctor) {\n    promise.then(response => response.filter(x => x['id'] === doctor)).then(response => response.length === 1 ? response[0]['schedule'] : []).then(response => this.setState(_objectSpread({}, this.state, {\n      schedule: response\n    })));\n  }\n\n  fetchSchedule(lpu_id) {\n    if (!this.state.scheduleCache) {\n      const data = Object.assign({\n        method: \"get_lpu_schedule_info\",\n        params: {\n          lpu_id\n        }\n      }, DEFAULT_DATA);\n      return fetch(BASE_URL + SHEDULE_URL, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(response => response['result']).then(response => response['availableResource']).then(response => {\n        this.setState(_objectSpread({}, this.state, {\n          scheduleCache: response\n        }));\n        return response;\n      });\n    }\n\n    return Promise.resolve(this.state.scheduleCache);\n  }\n\n  componentDidMount() {\n    this.fetchDepartments(this.props.omsNumber, this.props.birthDate);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.department !== prevState.department) {\n      this.fetchDoctors(this.props.omsNumber, this.props.birthDate, this.state.department);\n    }\n\n    if (this.state.doctor !== prevState.doctor) {\n      // console.log('Doctors: ', this.state.doctor, prevState.doctor)\n      // console.log(prevState.doctor)\n      // console.log(this.state.doctor)\n      this.doctorFromSchedule(this.fetchSchedule(this.state.lpuId), this.state.doctor);\n    }\n  }\n\n  handleClickDepartment(element) {\n    if (this.state.department !== element) {\n      this.setState(_objectSpread({}, this.state, {\n        department: element,\n        doctors: [],\n        schedule: []\n      }));\n    }\n  }\n\n  handleClickDoctor(element) {\n    if (this.state.doctor !== element) {\n      this.setState(_objectSpread({}, this.state, {\n        doctor: element,\n        schedule: []\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.schedule,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.department,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Department, {\n      items: this.state.departments,\n      handleClick: this.handleClickDepartment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), this.state.doctors.length !== 0 && React.createElement(\"div\", {\n      className: styles.doctor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Doctor, {\n      items: this.state.doctors,\n      handleClick: this.handleClickDoctor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), this.state.schedule.length !== 0 && React.createElement(\"div\", {\n      className: styles.scheduleFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(ScheduleFrame, {\n      items: this.state.schedule,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/components/Schedule/Schedule.js"],"names":["React","styles","Department","Doctor","ScheduleFrame","BASE_URL","DEPARTMENT_URL","DOCTOR_URL","SHEDULE_URL","DEFAULT_DATA","id","jsonrpc","Schedule","Component","constructor","props","state","departments","doctors","schedule","department","doctor","handleClickDepartment","bind","handleClickDoctor","fetchDepartments","oms_number","birth_date","data","Object","assign","method","params","fetch","body","JSON","stringify","headers","then","response","json","setState","fetchDoctors","speciality_id","referral_id","lpuId","Number","parseInt","doctorFromSchedule","promise","filter","x","length","fetchSchedule","lpu_id","scheduleCache","Promise","resolve","componentDidMount","omsNumber","birthDate","componentDidUpdate","prevProps","prevState","snapshot","element","render","scheduleFrame"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport styles from './Schedule.module.css';\n\nimport Department from './Department/Department';\nimport Doctor from './Doctor/Doctor';\nimport ScheduleFrame from './ScheduleFrame/ScheduleFrame';\n\nconst BASE_URL = \"https://api.emias.info/jsonproxyportal/v1/\"\nconst DEPARTMENT_URL = \"?get_specialities_info\"\nconst DOCTOR_URL = \"?get_doctors_info\"\nconst SHEDULE_URL = \"\"\n\nconst DEFAULT_DATA = {\n\tid: \"\",\n\tjsonrpc: \"2.0\",\n}\n\n\nexport default class Schedule extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {departments: [], doctors: [], schedule: [], department: '', doctor: ''}\n\n\t\tthis.handleClickDepartment = this.handleClickDepartment.bind(this);\n\t\tthis.handleClickDoctor = this.handleClickDoctor.bind(this);\n\t}\n\n\tfetchDepartments(oms_number, birth_date) {\n\t\tconst data = Object.assign({\n\t\t\tmethod: \"get_specialities_info\",\n\t\t\tparams: {birth_date, oms_number},\n\t\t}, DEFAULT_DATA)\n\n\t\treturn fetch(BASE_URL+DEPARTMENT_URL, {\n\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t })\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(response => response['result'])\n\t\t\t\t\t\t.then(response => this.setState({ ...this.state,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t departments: response,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t}\n\n\tfetchDoctors(oms_number, birth_date, speciality_id, referral_id=null) {\n\t\tconst data = Object.assign({\n\t\t\tmethod: \"get_doctors_info\",\n\t\t\tparams: {birth_date, oms_number, speciality_id, referral_id},\n\t\t}, DEFAULT_DATA)\n\n\t\treturn fetch(BASE_URL+DOCTOR_URL, {\n\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(response => response['result'])\n\t\t\t\t\t\t.then(response => this.setState({...this.state,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t doctors: response,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t lpuId: this.state.lpuId ? \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t this.state.lpuId : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t Number.parseInt(response[0]['lpuRoomsInfo']['lpuRoomView'][0]['lpuId'])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t}\n\n\tdoctorFromSchedule(promise, doctor) {\n\t\tpromise.then(response => response.filter(x => x['id'] === doctor))\n\t\t\t\t\t .then(response => response.length === 1? response[0]['schedule'] : [])\n\t\t       .then(response => this.setState({...this.state,\n\t\t\t\t\t\t\t\t\t\t\t        \t\t\t\t\t\t\tschedule: response,\n\t\t\t\t\t\t\t\t\t    \t\t\t\t    \t\t\t\t }));\n\t}\n\n\tfetchSchedule(lpu_id) {\n\t\tif (!this.state.scheduleCache) {\n\t\t\tconst data = Object.assign({\n\t\t\t\tmethod: \"get_lpu_schedule_info\",\n\t\t\t\tparams: {lpu_id},\n\t\t\t}, DEFAULT_DATA)\n\n\t\t\treturn fetch(BASE_URL+SHEDULE_URL, {\n\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t\t.then(response => response['result'])\n\t\t\t\t\t\t\t.then(response => response['availableResource'])\n\t\t\t\t\t\t\t.then(response => {this.setState({...this.state, scheduleCache: response});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t return response})\n\t\t}\n\t\n\t\treturn Promise.resolve(this.state.scheduleCache)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchDepartments(this.props.omsNumber, this.props.birthDate);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (this.state.department !== prevState.department) {\n\t\t\tthis.fetchDoctors(this.props.omsNumber, this.props.birthDate, this.state.department);\n\t\t}\n\n\t\tif (this.state.doctor !== prevState.doctor) {\n\t\t\t// console.log('Doctors: ', this.state.doctor, prevState.doctor)\n\t\t\t// console.log(prevState.doctor)\n\t\t\t// console.log(this.state.doctor)\n\t\t\tthis.doctorFromSchedule(this.fetchSchedule(this.state.lpuId), this.state.doctor);\n\t\t}\n\t}\n\n\thandleClickDepartment(element) {\n\t\tif (this.state.department !== element) {\n\t\t\tthis.setState({...this.state, department: element, doctors: [], schedule: []})}\n\t}\n\n\thandleClickDoctor(element) {\n\t\tif (this.state.doctor !== element) {\n\t\t\tthis.setState({...this.state, doctor: element, schedule: []})}\n\t}\n\n  render() {\n\t\treturn (\n\t\t\t<div className={styles.schedule}>\n\t\t\t\t<div className={styles.department}>\n\t\t\t\t\t<Department items={this.state.departments} handleClick={this.handleClickDepartment} />\n\t\t\t\t</div>\n\t\t\t\t{this.state.doctors.length !== 0 &&\n\t\t\t\t\t<div className={styles.doctor}>\n\t\t\t\t\t\t<Doctor items={this.state.doctors} handleClick={this.handleClickDoctor} />\n\t\t\t\t\t</div>}\n\t\t\t\t{this.state.schedule.length !== 0 &&\n\t\t\t\t\t<div className={styles.scheduleFrame}>\n\t\t\t\t\t\t<ScheduleFrame items={this.state.schedule} />\n\t\t\t\t\t</div>}\n\t\t\t</div>\n\t\t);\n\t};\n};"]},"metadata":{},"sourceType":"module"}