{"ast":null,"code":"var _jsxFileName = \"/Users/17476018U/Google \\u0414\\u0438\\u0441\\u043A/Projects/Frontend/Project/DoctorsFront/src/pages/AppointmentPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Tile from '../components/Tile/Tile';\nimport styles from './AppointmentPage.module.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { loadAppointment, deleteAppointment } from '../redux/appointment/actions';\n\nclass AppointmentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAppointment = this.handleAppointment.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDeleteAllAppointment = this.handleDeleteAllAppointment.bind(this);\n  }\n\n  handleAppointment() {\n    this.props.loadAppointment([this.props.omsNumber, this.props.birthDate]);\n  }\n\n  handleDelete(id) {\n    this.props.deleteAppointment([[id], this.props.omsNumber, this.props.birthDate]);\n  }\n\n  handleDeleteAllAppointment(indexDoctor) {\n    this.props.deleteAppointment([this.props.doctors[indexDoctor].map(x => x.appointment_id), this.props.omsNumber, this.props.birthDate]);\n  } //this.state.departments.filter(department => department.available_resource_id === doctor).map(department =>\n\n\n  componentDidMount() {\n    this.handleAppointment();\n  }\n\n  render() {\n    const loadPage = React.createElement(\"div\", {\n      className: styles.loadPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n\n    if (this.props.loadingFlag) {\n      return loadPage;\n    }\n\n    const emptyPage = React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, 'У вас пока нет записей!');\n    const page = React.createElement(\"div\", {\n      className: styles.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: styles.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.doctors.map((doctor, index) => React.createElement(Tile, {\n      key: index,\n      handleDelete: () => this.handleDeleteAllAppointment(index),\n      handleDeleteItem: this.handleDelete,\n      appointments: doctor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))));\n    return this.props.doctors.length === 0 ? emptyPage : page;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  appointment: state.appointment,\n  //[...new Set(state.appointment.departments.map(x=>x.available_resource_id))].map(x => state.appointment.departments.filter(y=>y.available_resource_id===x)),\n  loadingFlag: !state.appointment,\n  omsNumber: state.user.omsNumber,\n  birthDate: state.user.birthDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadAppointment: payload => dispatch(loadAppointment(payload)),\n  deleteAppointment: payload => dispatch(deleteAppointment(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentPage);","map":{"version":3,"sources":["/Users/17476018U/Google Диск/Projects/Frontend/Project/DoctorsFront/src/pages/AppointmentPage.js"],"names":["React","connect","Tile","styles","Spinner","loadAppointment","deleteAppointment","AppointmentPage","Component","constructor","props","handleAppointment","bind","handleDelete","handleDeleteAllAppointment","omsNumber","birthDate","id","indexDoctor","doctors","map","x","appointment_id","componentDidMount","render","loadPage","loadingFlag","emptyPage","page","list","doctor","index","length","mapStateToProps","state","appointment","user","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Tile from '../components/Tile/Tile'\n\nimport styles from './AppointmentPage.module.css'\n\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport { loadAppointment, deleteAppointment } from '../redux/appointment/actions';\n\nclass AppointmentPage extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleAppointment = this.handleAppointment.bind(this);\n\t\tthis.handleDelete = this.handleDelete.bind(this);\n\t\tthis.handleDeleteAllAppointment = this.handleDeleteAllAppointment.bind(this);\n\t}\n\n\thandleAppointment() {\n\t\tthis.props.loadAppointment([this.props.omsNumber, this.props.birthDate]);\n\t}\n\n\thandleDelete(id) {\n\t\tthis.props.deleteAppointment([[id], this.props.omsNumber, this.props.birthDate]);\n\t}\n\n\thandleDeleteAllAppointment(indexDoctor) {\n\t\tthis.props.deleteAppointment([\n\t\t\tthis.props.doctors[indexDoctor].map(x=>x.appointment_id),\n\t\t\tthis.props.omsNumber,\n\t\t\tthis.props.birthDate,\n\t\t]);\n\t}\n\n\t//this.state.departments.filter(department => department.available_resource_id === doctor).map(department =>\n\n\tcomponentDidMount() {\n\t\tthis.handleAppointment();\n\t}\n\n\trender() {\n\t\tconst loadPage = <div className={styles.loadPage} ><Spinner animation='border' variant='primary' /></div>;\n\t\t\n\t\tif (this.props.loadingFlag) {\n\t\t\treturn loadPage;\n\t\t}\n\t\tconst emptyPage = <h2>{'У вас пока нет записей!'}</h2>;\n\t\tconst page = (\n\t\t\t<div className={styles.page}>\n\t\t\t<ul className={styles.list}>\n\t\t\t\t{this.props.doctors\n\t\t\t\t\t.map((doctor, index) => \n\t\t\t\t\t\t<Tile\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\thandleDelete={() => this.handleDeleteAllAppointment(index)}\n\t\t\t\t\t\t\thandleDeleteItem={this.handleDelete}\n\t\t\t\t\t\t\tappointments={doctor}\n\t\t\t\t\t\t/>)\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\t\t);\n\t\treturn  this.props.doctors.length === 0 ? emptyPage : page;\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\tappointment: state.appointment,//[...new Set(state.appointment.departments.map(x=>x.available_resource_id))].map(x => state.appointment.departments.filter(y=>y.available_resource_id===x)),\n\tloadingFlag: !state.appointment,\n\tomsNumber: state.user.omsNumber,\n\tbirthDate: state.user.birthDate,\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n\tloadAppointment: payload => dispatch(loadAppointment(payload)),\n\tdeleteAppointment: payload => dispatch(deleteAppointment(payload)),\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(AppointmentPage);\n"]},"metadata":{},"sourceType":"module"}